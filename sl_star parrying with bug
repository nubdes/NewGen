	for( i = 0; i < MAX_SKILL; i++ ) {
		uint16 skill_id = 0;

		if( sd->status.skill[i].flag != SKILL_FLAG_PERMANENT && sd->status.skill[i].flag != SKILL_FLAG_PERM_GRANTED && sd->status.skill[i].flag != SKILL_FLAG_PLAGIARIZED ) {
			sd->status.skill[i].lv = (sd->status.skill[i].flag == SKILL_FLAG_TEMPORARY) ? 0 : sd->status.skill[i].flag - SKILL_FLAG_REPLACED_LV_0;
			sd->status.skill[i].flag = SKILL_FLAG_PERMANENT;
		}

			if (!(skill_id = skill_idx2id(i)) || skill_id < LK_PARRYING || skill_id > LK_PARRYING )
			continue;

		if( &sd->sc && sd->sc.count && sd->sc.data[SC_SPIRIT] && sd->sc.data[SC_SPIRIT]->val2 == SL_STAR ) {
				//enable LK_Parrying to SG class
				sd->status.skill[i].id = skill_id;
				sd->status.skill[i].lv = 1;
				sd->status.skill[i].flag = SKILL_FLAG_TEMPORARY; // Tag it as a non-savable, non-uppable, bonus skill
			}
		if( &sd->sc && sd->sc.count && sd->sc.data[SC_SPIRIT] && sd->sc.data[SC_SPIRIT]->val2 == SL_BLACKSMITH ) {
				//enable LK_Parrying to Blacksmith
				sd->status.skill[i].id = skill_id;
				sd->status.skill[i].lv = 3;
				sd->status.skill[i].flag = SKILL_FLAG_TEMPORARY; // Tag it as a non-savable, non-uppable, bonus skill
			}
		}
